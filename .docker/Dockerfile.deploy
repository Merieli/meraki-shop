FROM php:8.4.9RC1-fpm-alpine3.22

ENV APP_DIR="/var/www/meraki-shop"
ENV PORT=80
ENV NODE_VERSION=22
ENV COMPOSER_MEMORY_LIMIT=-1
ENV COMPOSER_ALLOW_SUPERUSER=1

# --------------------------------------------------------------
# Instalação de dependências do sistema e extensões PHP
# --------------------------------------------------------------
RUN apk update && apk add --no-cache \
    supervisor \
    zlib-dev \
    libzip-dev \
    libpng-dev \
    libxml2-dev \
    unzip \
    postgresql-dev \
    curl \
    make \
    gnu-libiconv-dev \
    oniguruma-dev \
    shadow

RUN docker-php-ext-install mysqli pdo pdo_mysql pdo_pgsql pgsql session xml
RUN docker-php-ext-install zip simplexml pcntl gd fileinfo mbstring

# Instala Composer
COPY --from=composer/composer:latest-bin /composer /usr/bin/composer

# Instala Node
COPY --from=node:22-alpine /usr/local/bin/node /usr/local/bin/
COPY --from=node:22-alpine /usr/local/lib/node_modules /usr/local/lib/node_modules
RUN ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm && \
    ln -s /usr/local/lib/node_modules/npm/bin/npx-cli.js /usr/local/bin/npx
RUN npm install -g npm@latest

# --------------------------------------------------------------
# Configuração de diretórios e permissões
# --------------------------------------------------------------
# Cria diretórios necessários com permissões adequadas
RUN mkdir -p /usr/local/var/log \
    && mkdir -p /usr/local/var/run \
    && mkdir -p ${APP_DIR}/storage/logs \
    && mkdir -p ${APP_DIR}/storage/framework/{sessions,views,cache} \
    && mkdir -p ${APP_DIR}/bootstrap/cache \
    && chown -R www-data:www-data /usr/local/var/log \
    && chown -R www-data:www-data /usr/local/var/run \
    && chmod -R 755 /usr/local/var/log \
    && chmod -R 755 /usr/local/var/run

# Configura usuário www-data
RUN usermod -u 1000 www-data \
    && groupmod -g 1000 www-data \
    && chown -R www-data:www-data ${APP_DIR}

# Copia configurações
COPY ./.docker/php/php.ini "$PHP_INI_DIR/conf.d/99_extra.ini"
COPY ./.docker/php/php-fpm.conf /usr/local/etc/php-fpm.d
COPY ./.docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

WORKDIR $APP_DIR

# --------------------------------------------------------------
# Instala dependências (aproveitando o cache do Docker)
# --------------------------------------------------------------
COPY composer.json composer.lock ./
COPY package.json package-lock.json ./

# Instala dependências do Composer
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

# Instala dependências do NPM e faz o build
RUN npm ci && \
    npm run build

# --------------------------------------------------------------
# Copia o código da aplicação
# --------------------------------------------------------------
COPY . .

# Gera chave da aplicação e executa migrações
RUN php artisan key:generate --force && \
    php artisan config:cache && \
    php artisan route:cache && \
    php artisan view:cache

# --------------------------------------------------------------
# Finaliza a configuração
# --------------------------------------------------------------
# Ajusta as permissões dos arquivos para o usuário da aplicação
RUN chown -R www-data:www-data ${APP_DIR} \
    && chmod -R 755 ${APP_DIR}/storage \
    && chmod -R 755 ${APP_DIR}/bootstrap/cache

# Muda para o usuário não-root para a execução
USER www-data

# Expõe a porta do servidor Laravel
EXPOSE 80

# Inicia todos os serviços via supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
