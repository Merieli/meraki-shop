FROM node:22-alpine AS node-stage

FROM php:8.4.9RC1-fpm-alpine3.22

ARG APP_USER=meraki

# Diretório da aplicação
ENV APP_DIR="/var/www/meraki-shop"

# --------------------------------------------------------------
# Cria um usuário não-root para rodar a aplicação
# --------------------------------------------------------------
RUN addgroup -g 1000 -S ${APP_USER} && \
    adduser -u 1000 -S ${APP_USER} -G ${APP_USER}

# --------------------------------------------------------------
# Instalação de dependências do sistema operacional
# --------------------------------------------------------------
RUN apk update && apk add --no-cache \
    supervisor \
    zlib-dev \
    libzip-dev \
    libpng-dev \
    libxml2-dev \
    unzip \
    postgresql-dev \
    curl \
    make \
    gnu-libiconv-dev \
    oniguruma-dev

# --------------------------------------------------------------
# EXTENSÕES DO PHP
# --------------------------------------------------------------
# Instala extensões do PHP: mysqli, pdo, pdo_mysql, pdo_pgsql, pgsql, session, xml
RUN docker-php-ext-install mysqli pdo pdo_mysql pdo_pgsql pgsql session xml

# Instala extensões do PHP: zip, simplexml, pcntl, gd, fileinfo e mbstring
RUN docker-php-ext-install zip simplexml pcntl gd fileinfo mbstring

# --------------------------------------------------------------
# Instala a última versão do Composer para o PHP
# --------------------------------------------------------------
COPY --from=composer/composer:latest-bin /composer /usr/bin/composer

# --------------------------------------------------------------
# Prepara as configurações customizadas do PHP da pasta `/.docker/php`
# --------------------------------------------------------------
COPY ./.docker/php/php.ini "$PHP_INI_DIR/conf.d/99_extra.ini"
COPY ./.docker/php/php-fpm.conf /usr/local/etc/php-fpm.d
COPY ./.docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# --------------------------------------------------------------
WORKDIR $APP_DIR

# --------------------------------------------------------------
# Instala o Node para os comandos do npm
# --------------------------------------------------------------
COPY --from=node-stage /usr/local/bin/node /usr/local/bin/
COPY --from=node-stage /usr/local/lib/node_modules /usr/local/lib/node_modules

# Cria os links simbólicos como root (antes de mudar para usuário não-root)
RUN ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm && \
    ln -s /usr/local/lib/node_modules/npm/bin/npx-cli.js /usr/local/bin/npx

RUN npm install -g npm@latest

# Copia os arquivos da aplicação
COPY --chown=${APP_USER}:${APP_USER} . .

# Muda para o usuário não-root
USER $APP_USER

# --------------------------------------------------------------
# Instala dependências do Composer e NPM
# --------------------------------------------------------------
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
RUN npm install
RUN npm run build

# Expõe a porta 9000 e inicia o supervisor para gerenciar php-fpm
EXPOSE 9000
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
